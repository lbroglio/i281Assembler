#include <stdlib.h> 
#include<string>
#include <bitset>

/**
 * @brief Stores the needed information to output a variable in verilog
 * 
 */
struct usrVarOutput{
    //The name of the variable
    std::string name;
    //The value in binary
    std::bitset<8> val;
};

/**
 * @brief Stores the needed information to output a branch destination
 * 
 */
struct branchLocOutput{
    //The name of the branch location
    std::string name;
    //The line number/ location of this branch
    int loc;
};

/**
 * @brief Writes statements to declare verilog output buses into the provided file.
 *  Statements look like this 'output [15:0] b0I;' but size and number change
 * 
 * @param numOutputs The number of output buses to declare 
 * @param outputBusSize The size of the buses to declare
 * @param outputFile The file to write the statements to
 */
void declareVerilogOutputs(int numOutputs,int outputBusSize, std::ofstream* outputFile);

/**
 * @brief Writes a verilog file using a max of 16 instructions from the provided list. First instruction is at the given point.
 * 
 * @param instructionList The list of instructions to output
 * @param startLoc The location within the instruction list to start
 * @param filePath The location to place the new verilog file
 * @param moduleName The name of the verilog module to create
 */
void outputUserCode(std::vector<std::string> instructionList, int startLoc,std::string filePath,std::string moduleName);

/**
 * @brief Writes a verilog file with the assignments of the user declared variables
 * 
 * @param usrVars List of variables to write to the file
 * @param filePath The location to place the new verilog file
 */
void outputUserData(std::vector<usrVarOutput> usrVars,std::string filePath);  

/**
 * @brief Writes the .bin file output
 * 
 * @param rawCode - The raw Assembly Code submitted by the user
 * @param machineCode - The machine code instructions generated by the Assembler
 * @param programName - The name of the programs file
 * @param filePath - The path to create the file at
 * @param varsList - List of the necessary variable values
 * @param branchLocs - List of the necessary information about the branch locations in structs
 */
void outputBinFile(std::string rawCode,std::string machineCode,std::string programName,std::string filePath,std::vector<int> varsList,std::vector<branchLocOutput> branchLocs);

/**
 * @brief Outputs the contents of the .bin file to the console
 * 
 * @param rawCode - The raw Assembly Code submitted by the user
 * @param machineCode - The machine code instructions generated by the Assembler
 * @param varsList - List of the necessary variable values
 * @param branchLocs - List of the necessary information about the branch locations in structs
 */
void outputToConsole(std::string rawCode,std::string machineCode,std::vector<int> varsList,std::vector<branchLocOutput> branchLocs);